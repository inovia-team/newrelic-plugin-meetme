---

# Checking for required vars before doing anything else
- name: Check that newrelic_license_key is set
  fail:
    msg: "newrelic_license_key has not been defined"
  when: newrelic_license_key is not defined

- name: Add OS specific variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: RedHat | python-pip installed
  yum: name={{ item }} state=installed
  when: ansible_os_family == 'RedHat'
  with_items:
    - python-pip
    - python-devel

- name: Debian | python-pip installed
  apt: pkg={{ item }} update_cache=yes state=installed
  when: ansible_os_family == 'Debian'
  with_items:
    - python-pip
    - python-dev

- name: Update pip
  pip: name={{ item }} state=latest
  with_items: "{{ newrelic_plugin_pip_updates }}"

- name: Install latest newrelic-plugin-agent
  pip: name=newrelic-plugin-agent state=latest
  when: newrelic_plugin_agent_version == 'latest'

- name: Install newrelic-plugin-agent specific version
  pip: name=newrelic-plugin-agent version={{ newrelic_plugin_agent_version }}
  when: newrelic_plugin_agent_version != 'latest'

- name: Include per agent requirements
  include: install_agent_per_service_requirements.yml

- name: Add newrelic plugin user
  user: name={{ newrelic_plugin_user }} comment='Newrelic_plugin_agent user' state=present

- name: Create log directory
  file: path={{ newrelic_plugin_log_location }} state=directory owner={{ newrelic_plugin_user }} mode=755

- name: Create pid directory
  file: path={{ newrelic_plugin_pid_location }} state=directory owner={{ newrelic_plugin_user }} mode=755

- name: Create config directory
  file: path={{ newrelic_plugin_config_location }} state=directory owner={{ newrelic_plugin_user }} mode=755

- name: Template newrelic plugin config file
  template: dest={{ newrelic_plugin_config_location }}/{{ newrelic_plugin_config_name }} src=newrelic_plugin_agent.cfg.j2 owner={{ newrelic_plugin_user }} mode=600

- name: Install init script into init.d
  template: dest=/etc/init.d/newrelic_plugin_agent src=newrelic_plugin_agent.{{ ansible_os_family }}.startup.j2 owner=root group=root mode=0750
  notify: restart newrelic_plugin

- name: Enable and start newrelic plugin service
  service: name={{ newrelic_plugin_service_name }} state=started enabled=True
